;IR code
;PUSH   
;PUSHREGS   
;JSR FUNC_main  
;HALT   
;LABEL FUNC_main  
;LINK 0  
;STOREF 0.001000 !T0 
;STOREF !T0 !T1 
;STOREF !T1 error 
;READF x1  
;MULF x1 x1 !T2
;SUBF !T2 n !T3
;STOREF !T3 !T4 
;STOREF !T4 fx 
;STOREF 2.000000 !T6 
;MULF !T6 x1 !T5
;STOREF !T5 !T7 
;STOREF !T7 dfx 
;DIVF fx dfx !T8
;SUBF x1 !T8 !T9
;STOREF !T9 !T10 
;STOREF !T10 x2 
;STOREF x2 !T11 
;STOREF !T11 x1 
;MULF x1 x1 !T12
;SUBF !T12 n !T13
;STOREF !T13 !T14 
;STOREF !T14 fx 
;STOREF 2.000000 !T16 
;MULF !T16 x1 !T15
;STOREF !T15 !T17 
;STOREF !T17 dfx 
;DIVF fx dfx !T18
;SUBF x1 !T18 !T19
;STOREF !T19 !T20 
;STOREF !T20 x2 
;LABEL WHILE_LOOP_START_1  
;SUBF x1 x2 !T21
;STOREF error !T22 
;LTF !T21 !T22 WHILE_LOOP_END_1
;STOREF x2 !T23 
;STOREF !T23 x1 
;MULF x1 x1 !T24
;SUBF !T24 n !T25
;STOREF !T25 !T26 
;STOREF !T26 fx 
;STOREF 2.000000 !T28 
;MULF !T28 x1 !T27
;STOREF !T27 !T29 
;STOREF !T29 dfx 
;DIVF fx dfx !T30
;SUBF x1 !T30 !T31
;STOREF !T31 !T32 
;STOREF !T32 x2 
;JUMP WHILE_LOOP_START_1  
;LABEL WHILE_LOOP_END_1  
;WRITEF x2  
;UNLINK   
;RET   
str dummy "abcde"
var x1
var x2
var fx
var dfx
var error
var i
var n
push  
push r0
push r1
push r2
push r3
jsr  FUNC_main
sys halt
label  FUNC_main
link  0
move 0.001000 r0
move r0 r1
move r1 error
sys readr x1 
move x1 r2
mulr x1 r2
move r2 r3
subr n r3
move r3 r4
move r4 fx
move 2.000000 r6
move r6 r5
mulr x1 r5
move r5 r7
move r7 dfx
move fx r8
divr dfx r8
move x1 r9
subr r8 r9
move r9 r10
move r10 x2
move x2 r11
move r11 x1
move x1 r12
mulr x1 r12
move r12 r13
subr n r13
move r13 r14
move r14 fx
move 2.000000 r16
move r16 r15
mulr x1 r15
move r15 r17
move r17 dfx
move fx r18
divr dfx r18
move x1 r19
subr r18 r19
move r19 r20
move r20 x2
label  WHILE_LOOP_START_1
move x1 r21
subr x2 r21
move error r22
cmpr  r21 r22
jlt  WHILE_LOOP_END_1
move x2 r23
move r23 x1
move x1 r24
mulr x1 r24
move r24 r25
subr n r25
move r25 r26
move r26 fx
move 2.000000 r28
move r28 r27
mulr x1 r27
move r27 r29
move r29 dfx
move fx r30
divr dfx r30
move x1 r31
subr r30 r31
move r31 r32
move r32 x2
jmp  WHILE_LOOP_START_1
label  WHILE_LOOP_END_1
sys writer x2 
unlnk
ret
