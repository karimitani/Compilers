;IR code
;PUSH   
;PUSHREGS   
;JSR FUNC_main  
;HALT   
;LABEL FUNC_F  
;LINK 0  
;STOREI 2 !T0 
;LEI $2 !T0 ELSE_1
;STOREI 1 !T2 
;SUBI $2 !T2 !T1
;PUSH   
;PUSHREGS   
;PUSH !T1  
;JSR FUNC_F  
;POP   
;POPREGS   
;POP !T3  
;STOREI 2 !T5 
;SUBI $2 !T5 !T4
;PUSH   
;PUSHREGS   
;PUSH !T4  
;JSR FUNC_F  
;POP   
;POPREGS   
;POP !T6  
;ADDI !T3 !T6 !T7
;STOREI !T7 $7 
;UNLINK   
;RET   
;JUMP END_IF_ELSE1  
;LABEL ELSE_1  
;STOREI 0 !T8 
;NEI $2 !T8 ELSE_2
;STOREI 0 !T9 
;STOREI !T9 $7 
;UNLINK   
;RET   
;JUMP END_IF_ELSE2  
;LABEL ELSE_2  
;STOREI 1 !T10 
;NEI $2 !T10 ELSE_3
;STOREI 1 !T11 
;STOREI !T11 $7 
;UNLINK   
;RET   
;JUMP END_IF_ELSE3  
;LABEL ELSE_3  
;STOREI 1 !T12 
;STOREI !T12 $7 
;UNLINK   
;RET   
;LABEL END_IF_ELSE3  
;LABEL END_IF_ELSE2  
;LABEL END_IF_ELSE1  
;UNLINK   
;RET   
;LABEL FUNC_main  
;LINK 3  
;WRITES input  
;READI $-2  
;STOREI 0 !T13 
;STOREI !T13 !T14 
;STOREI !T14 $-1 
;LABEL WHILE_LOOP_START_4  
;STOREI $-2 !T15 
;EQI $-1 !T15 WHILE_LOOP_END_4
;PUSH   
;PUSHREGS   
;PUSH $-1  
;JSR FUNC_F  
;POP   
;POPREGS   
;POP !T16  
;STOREI !T16 !T17 
;STOREI !T17 $-3 
;WRITEI $-1  
;WRITES space  
;WRITEI $-3  
;WRITES eol  
;STOREI 1 !T19 
;ADDI $-1 !T19 !T18
;STOREI !T18 !T20 
;STOREI !T20 $-1 
;JUMP WHILE_LOOP_START_4  
;LABEL WHILE_LOOP_END_4  
;UNLINK   
;RET   
str input "Please input an integer number: "
str space " "
str eol "\n"
push  
push r0
push r1
push r2
push r3
jsr  FUNC_main
sys halt
label  FUNC_F
link  0
move 2 r0
cmpi  $2 r0
jle  ELSE_1
move 1 r2
move $2 r1
subi r2 r1
push  
push r0
push r1
push r2
push r3
push  r1
jsr  FUNC_F
pop  
pop r3
pop r2
pop r1
pop r0
pop  r3
move 2 r5
move $2 r4
subi r5 r4
push  
push r0
push r1
push r2
push r3
push  r4
jsr  FUNC_F
pop  
pop r3
pop r2
pop r1
pop r0
pop  r6
move r3 r7
addi r6 r7
move r7 $7
unlnk
ret
jmp  END_IF_ELSE1
label  ELSE_1
move 0 r8
cmpi  $2 r8
jne  ELSE_2
move 0 r9
move r9 $7
unlnk
ret
jmp  END_IF_ELSE2
label  ELSE_2
move 1 r10
cmpi  $2 r10
jne  ELSE_3
move 1 r11
move r11 $7
unlnk
ret
jmp  END_IF_ELSE3
label  ELSE_3
move 1 r12
move r12 $7
unlnk
ret
label  END_IF_ELSE3
label  END_IF_ELSE2
label  END_IF_ELSE1
unlnk
ret
label  FUNC_main
link  3
sys writes input 
sys readi $-2 
move 0 r13
move r13 r14
move r14 $-1
label  WHILE_LOOP_START_4
move $-2 r15
cmpi  $-1 r15
jeq  WHILE_LOOP_END_4
push  
push r0
push r1
push r2
push r3
push  $-1
jsr  FUNC_F
pop  
pop r3
pop r2
pop r1
pop r0
pop  r16
move r16 r17
move r17 $-3
sys writei $-1 
sys writes space 
sys writei $-3 
sys writes eol 
move 1 r19
move $-1 r18
addi r19 r18
move r18 r20
move r20 $-1
jmp  WHILE_LOOP_START_4
label  WHILE_LOOP_END_4
unlnk
ret
